<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>博客背景添加粒子特效</title>
      <link href="/5ac32811adb9/"/>
      <url>/5ac32811adb9/</url>
      
        <content type="html"><![CDATA[<h2 id="本文介绍如何在博客背景添加可跟随鼠标的粒子特效"><a href="#本文介绍如何在博客背景添加可跟随鼠标的粒子特效" class="headerlink" title="本文介绍如何在博客背景添加可跟随鼠标的粒子特效"></a>本文介绍如何在博客背景添加可跟随鼠标的粒子特效</h2><p>效果如图：</p><p><img src="/%5Cimages%5C%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%5C%E5%8D%9A%E5%AE%A2%E8%83%8C%E6%99%AF%E6%B7%BB%E5%8A%A0%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88%5C1.png" alt="1"></p><h2 id="教程开始"><a href="#教程开始" class="headerlink" title="教程开始"></a>教程开始</h2><p>在&#x2F;source&#x2F;js文件夹中创建文件background.js，并添加以下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line">!(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">o</span>(<span class="params">w, v, i</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> w.<span class="title function_">getAttribute</span>(v) || i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">j</span>(<span class="params">i</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(i);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">l</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="title function_">j</span>(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> w = i.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">var</span> v = i[w - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">l</span>: w,</span><br><span class="line">      <span class="attr">z</span>: <span class="title function_">o</span>(v, <span class="string">&quot;zIndex&quot;</span>, -<span class="number">1</span>), <span class="comment">// canvas层级（默认-1，值越大越靠上）</span></span><br><span class="line">      <span class="attr">o</span>: <span class="title function_">o</span>(v, <span class="string">&quot;opacity&quot;</span>, <span class="number">0.5</span>), <span class="comment">// canvas整体透明度（默认0.5，0-1之间）</span></span><br><span class="line">      <span class="attr">c</span>: <span class="title function_">o</span>(v, <span class="string">&quot;color&quot;</span>, <span class="string">&quot;0,0,0&quot;</span>), <span class="comment">// 粒子/连线颜色（默认黑色，格式&quot;r,g,b&quot;）</span></span><br><span class="line">      <span class="attr">n</span>: <span class="title function_">o</span>(v, <span class="string">&quot;count&quot;</span>, <span class="number">50</span>), <span class="comment">// 粒子总数（默认99个，值越大粒子越密集）</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">k</span>(<span class="params"></span>) &#123;</span><br><span class="line">    r = u.<span class="property">width</span> =</span><br><span class="line">      <span class="variable language_">window</span>.<span class="property">innerWidth</span> ||</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span> ||</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientWidth</span>;</span><br><span class="line">    n = u.<span class="property">height</span> =</span><br><span class="line">      <span class="variable language_">window</span>.<span class="property">innerHeight</span> ||</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span> ||</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientHeight</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">b</span>(<span class="params"></span>) &#123;</span><br><span class="line">    e.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, r, n);</span><br><span class="line">    <span class="keyword">var</span> w = [f].<span class="title function_">concat</span>(t);</span><br><span class="line">    <span class="keyword">var</span> x, v, A, B, z, y;</span><br><span class="line">    t.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">i</span>) &#123;</span><br><span class="line">      i.<span class="property">x</span> += i.<span class="property">xa</span>;</span><br><span class="line">      i.<span class="property">y</span> += i.<span class="property">ya</span>;</span><br><span class="line">      i.<span class="property">xa</span> *= i.<span class="property">x</span> &gt; r || i.<span class="property">x</span> &lt; <span class="number">0</span> ? -<span class="number">1</span> : <span class="number">1</span>;</span><br><span class="line">      i.<span class="property">ya</span> *= i.<span class="property">y</span> &gt; n || i.<span class="property">y</span> &lt; <span class="number">0</span> ? -<span class="number">1</span> : <span class="number">1</span>;</span><br><span class="line">      e.<span class="title function_">fillRect</span>(i.<span class="property">x</span> - <span class="number">0.5</span>, i.<span class="property">y</span> - <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">1</span>);<span class="comment">//绘制单个粒子：1px*1px的矩形</span></span><br><span class="line">      <span class="keyword">for</span> (v = <span class="number">0</span>; v &lt; w.<span class="property">length</span>; v++) &#123;</span><br><span class="line">        x = w[v];</span><br><span class="line">        <span class="keyword">if</span> (i !== x &amp;&amp; <span class="literal">null</span> !== x.<span class="property">x</span> &amp;&amp; <span class="literal">null</span> !== x.<span class="property">y</span>) &#123;</span><br><span class="line">          B = i.<span class="property">x</span> - x.<span class="property">x</span>;</span><br><span class="line">          z = i.<span class="property">y</span> - x.<span class="property">y</span>;</span><br><span class="line">          y = B * B + z * z;</span><br><span class="line">          <span class="keyword">if</span> (y &lt; x.<span class="property">max</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (</span><br><span class="line">              x === f &amp;&amp;</span><br><span class="line">              y &gt;= x.<span class="property">max</span> / <span class="number">2</span> &amp;&amp;</span><br><span class="line">              ((i.<span class="property">x</span> -= <span class="number">0.03</span> * B), (i.<span class="property">y</span> -= <span class="number">0.03</span> * z))</span><br><span class="line">            ) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">            A = (x.<span class="property">max</span> - y) / x.<span class="property">max</span>;</span><br><span class="line">            e.<span class="title function_">beginPath</span>();</span><br><span class="line">            e.<span class="property">lineWidth</span> = A / <span class="number">2</span>;</span><br><span class="line">            e.<span class="property">strokeStyle</span> = <span class="string">&quot;rgba(&quot;</span> + s.<span class="property">c</span> + <span class="string">&quot;,&quot;</span> + (A + <span class="number">0.2</span>) + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">            e.<span class="title function_">moveTo</span>(i.<span class="property">x</span>, i.<span class="property">y</span>);</span><br><span class="line">            e.<span class="title function_">lineTo</span>(x.<span class="property">x</span>, x.<span class="property">y</span>);</span><br><span class="line">            e.<span class="title function_">stroke</span>();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      w.<span class="title function_">splice</span>(w.<span class="title function_">indexOf</span>(i), <span class="number">1</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="title function_">m</span>(b);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> u = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>); </span><br><span class="line">  <span class="keyword">var</span> s = <span class="title function_">l</span>(); </span><br><span class="line">  <span class="keyword">var</span> c = <span class="string">&quot;c_n&quot;</span> + s.<span class="property">l</span>; </span><br><span class="line">  <span class="keyword">var</span> e = u.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>); </span><br><span class="line">  <span class="keyword">var</span> r, n; </span><br><span class="line">  <span class="keyword">var</span> m =</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">requestAnimationFrame</span> ||</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">webkitRequestAnimationFrame</span> ||</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">mozRequestAnimationFrame</span> ||</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">oRequestAnimationFrame</span> ||</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">msRequestAnimationFrame</span> ||</span><br><span class="line">    <span class="keyword">function</span> (<span class="params">i</span>) &#123;</span><br><span class="line">      <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(i, <span class="number">1000</span> / <span class="number">45</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> a = <span class="title class_">Math</span>.<span class="property">random</span>;</span><br><span class="line">  <span class="keyword">var</span> f = &#123;</span><br><span class="line">    <span class="attr">x</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">y</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">max</span>: <span class="number">5000</span>, <span class="comment">// 鼠标与粒子的最大连线距离（值越大，鼠标影响范围越广）</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  u.<span class="property">id</span> = c;</span><br><span class="line">  u.<span class="property">style</span>.<span class="property">cssText</span> =</span><br><span class="line">    <span class="string">&quot;position:fixed;top:0;left:0;z-index:&quot;</span> + s.<span class="property">z</span> + <span class="string">&quot;;opacity:&quot;</span> + s.<span class="property">o</span>;</span><br><span class="line">  <span class="title function_">j</span>(<span class="string">&quot;body&quot;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(u);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">k</span>();</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">onresize</span> = k;</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">onmousemove</span> = <span class="keyword">function</span> (<span class="params">i</span>) &#123;</span><br><span class="line">    i = i || <span class="variable language_">window</span>.<span class="property">event</span>;</span><br><span class="line">    f.<span class="property">x</span> = i.<span class="property">clientX</span>;</span><br><span class="line">    f.<span class="property">y</span> = i.<span class="property">clientY</span>;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">onmouseout</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    f.<span class="property">x</span> = <span class="literal">null</span>;</span><br><span class="line">    f.<span class="property">y</span> = <span class="literal">null</span>;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> t = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> p = <span class="number">0</span>; s.<span class="property">n</span> &gt; p; p++) &#123;</span><br><span class="line">    <span class="keyword">var</span> h = <span class="title function_">a</span>() * r; </span><br><span class="line">    <span class="keyword">var</span> g = <span class="title function_">a</span>() * n;</span><br><span class="line">    <span class="keyword">var</span> q = <span class="number">1</span> * <span class="title function_">a</span>() - <span class="number">0.5</span>; <span class="comment">// 粒子x方向速度（-1到1之间，负数向左、正数向右）</span></span><br><span class="line">    <span class="keyword">var</span> d = <span class="number">1</span> * <span class="title function_">a</span>() - <span class="number">0.5</span>; <span class="comment">// 粒子y方向速度（-1到1之间，负数向上、正数向下）</span></span><br><span class="line">    t.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">x</span>: h,</span><br><span class="line">      <span class="attr">y</span>: g,</span><br><span class="line">      <span class="attr">xa</span>: q,</span><br><span class="line">      <span class="attr">ya</span>: d,</span><br><span class="line">      <span class="attr">max</span>: <span class="number">10000</span>, <span class="comment">// 粒子间的最大连线距离（值越大，粒子间连线越密集）</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 延迟100ms执行绘制：确保canvas已添加到页面，避免绘制异常</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">b</span>();</span><br><span class="line">  &#125;, <span class="number">100</span>);</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后在_config.butterfly.yml配置文件中的 [inject.bottom] 引入以下js</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;/js/background.js?1&quot;&gt;&lt;/script&gt;</span> <span class="comment"># 动态粒子线条背景</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主题美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题顶部添加波浪效果</title>
      <link href="/728d0100c79c/"/>
      <url>/728d0100c79c/</url>
      
        <content type="html"><![CDATA[<h2 id="本文简要介绍如何在Hexo博客的Butterfly主题中，为每篇文章顶部添加一个动态波浪效果。"><a href="#本文简要介绍如何在Hexo博客的Butterfly主题中，为每篇文章顶部添加一个动态波浪效果。" class="headerlink" title="本文简要介绍如何在Hexo博客的Butterfly主题中，为每篇文章顶部添加一个动态波浪效果。"></a>本文简要介绍如何在Hexo博客的Butterfly主题中，为每篇文章顶部添加一个动态波浪效果。</h2><p>效果图：</p><p><img src="/%5Cimages%5C%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%5CButterfly%E4%B8%BB%E9%A2%98%E9%A1%B6%E9%83%A8%E6%B7%BB%E5%8A%A0%E6%B3%A2%E6%B5%AA%E6%95%88%E6%9E%9C-1.png" alt="Butterfly主题顶部添加波浪效果-1"></p><h2 id="教程开始"><a href="#教程开始" class="headerlink" title="教程开始"></a>教程开始</h2><p>修改主题目录文件：&#x2F;themes&#x2F;butterfly&#x2F;layout&#x2F;includes&#x2F;header&#x2F;index.pug</p><p>找到以下代码：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">header#page-header(class=`$&#123;headerClassName + isFixedClass&#125;` style=bg_img)</span><br><span class="line">  include ./nav.pug</span><br><span class="line">  if top_img !== false</span><br></pre></td></tr></table></figure><p>在代码后面添加代码(添加时删除+号)</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">header#page-header(class=`$&#123;headerClassName + isFixedClass&#125;` style=bg_img)</span><br><span class="line">  include ./nav.pug</span><br><span class="line">  if top_img !== false</span><br><span class="line"><span class="addition">+    section.main-hero-waves-area.waves-area</span></span><br><span class="line"><span class="addition">+      svg.waves-svg(xmlns=&#x27;http://www.w3.org/2000/svg&#x27;, xlink=&#x27;http://www.w3.org/1999/xlink&#x27;, viewBox=&#x27;0 24 150 28&#x27;, preserveAspectRatio=&#x27;none&#x27;, shape-rendering=&#x27;auto&#x27;)</span></span><br><span class="line"><span class="addition">+        defs</span></span><br><span class="line"><span class="addition">+          path#gentle-wave(d=&#x27;M -160 44 c 30 0 58 -18 88 -18 s 58 18 88 18 s 58 -18 88 -18 s 58 18 88 18 v 44 h -352 Z&#x27;)</span></span><br><span class="line"><span class="addition">+        g.parallax</span></span><br><span class="line"><span class="addition">+          use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;0&#x27;)</span></span><br><span class="line"><span class="addition">+          use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;3&#x27;)</span></span><br><span class="line"><span class="addition">+          use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;5&#x27;)</span></span><br><span class="line"><span class="addition">+          use(href=&#x27;#gentle-wave&#x27;, x=&#x27;48&#x27;, y=&#x27;7&#x27;)</span></span><br><span class="line">    if globalPageType <span class="comment">=== &#x27;post&#x27;</span></span><br><span class="line">      include ./post-info.pug</span><br></pre></td></tr></table></figure><p>在&#x2F;source&#x2F;css文件夹中创建wave.css文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* Animation */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: move-forever <span class="number">25s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.55</span>, <span class="number">0.5</span>, <span class="number">0.45</span>, <span class="number">0.5</span>) infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">2s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">7s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#ffffffbd</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">3s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">10s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#ffffff82</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">4s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">13s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#ffffff36</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">5s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">20s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 黑色模式背景 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">2s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">7s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#18171dc8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">3s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">10s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#18171d80</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">4s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">13s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#18171d3e</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.parallax</span> &gt; <span class="selector-tag">use</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">5s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">20s</span>;</span><br><span class="line">  <span class="attribute">fill</span>: <span class="number">#0d0d10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> move-forever &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(-<span class="number">90px</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">85px</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*Shrinking for mobile*/</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.waves-svg</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">40px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.waves-svg</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在_config.butterfly.yml配置文件中的 [inject.head] 或者自定义 css 中 引入以下 css</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/wave.css&quot;&gt;</span>     <span class="comment"># 自定义css 波浪线</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主题美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web漏洞分类与详解</title>
      <link href="/651cb7fa30c0/"/>
      <url>/651cb7fa30c0/</url>
      
        <content type="html"><![CDATA[<h1 id="一、SQL-注入相关漏洞"><a href="#一、SQL-注入相关漏洞" class="headerlink" title="一、SQL 注入相关漏洞"></a>一、SQL 注入相关漏洞</h1><ol><li>基础 SQL 注入（SQLi）</li><li>报错注入</li><li>二次注入（存储型 SQL 注入的特殊形式，输入存储后触发）</li><li>堆叠注入（通过分号执行多条 SQL 语句）</li><li>盲注</li></ol><p> 布尔盲注（基于查询结果的真假判断）</p><p> 时间盲注（基于延迟响应判断）</p><p> GET 注入（URL 参数）</p><p> POST 注入（表单数据）</p><p> Cookie 注入（Cookie 字段）</p><p> User-Agent 注入（请求头字段）</p><p> Referer 注入（请求头字段）</p><h1 id="二、跨站脚本（XSS）相关漏洞"><a href="#二、跨站脚本（XSS）相关漏洞" class="headerlink" title="二、跨站脚本（XSS）相关漏洞"></a>二、跨站脚本（XSS）相关漏洞</h1><ol><li>存储型 XSS（恶意脚本存储到服务器，持久触发）</li><li>反射型 XSS（脚本随请求返回，一次性触发）</li><li>DOM 型 XSS（客户端 DOM 解析时执行，不经过服务器）</li></ol><h1 id="三、命令注入相关漏洞"><a href="#三、命令注入相关漏洞" class="headerlink" title="三、命令注入相关漏洞"></a>三、命令注入相关漏洞</h1><ol><li>直接命令注入（用户输入直接拼接系统命令执行）</li><li>间接命令注入（通过文件上传、配置文件等间接触发）</li></ol><h1 id="四、文件操作相关漏洞"><a href="#四、文件操作相关漏洞" class="headerlink" title="四、文件操作相关漏洞"></a>四、文件操作相关漏洞</h1><h2 id="1-文件上传漏洞（细分-4-类）"><a href="#1-文件上传漏洞（细分-4-类）" class="headerlink" title="1.文件上传漏洞（细分 4 类）"></a>1.文件上传漏洞（细分 4 类）</h2><p> 1.后缀名绕过（如.php5、.phtml）</p><p> 2.MIME 类型绕过（修改Content-Type）</p><p> 3.路径遍历结合上传（如..&#x2F;shell.php）</p><p> 4.解析漏洞利用（如 IIS&#x2F;nginx 解析缺陷）</p><h2 id="1-文件包含漏洞"><a href="#1-文件包含漏洞" class="headerlink" title="1.文件包含漏洞"></a>1.文件包含漏洞</h2><p> 本地文件包含（LFI，包含服务器本地文件）</p><p> 远程文件包含（RFI，包含远程恶意文件）</p><ol><li>任意文件读取（未授权读取敏感文件，如&#x2F;etc&#x2F;passwd）</li><li>任意文件删除（未授权删除服务器文件）</li><li>任意文件写入（未授权写入文件，如写入后门）</li></ol><h1 id="五、认证与授权漏洞"><a href="#五、认证与授权漏洞" class="headerlink" title="五、认证与授权漏洞"></a>五、认证与授权漏洞</h1><ol><li>弱口令（密码复杂度不足，易被暴力破解）</li><li>默认口令（未修改设备 &#x2F; 系统默认账号密码）</li><li>密码明文传输（未加密传输，如 HTTP 传输密码）</li><li>会话固定（固定会话 ID，诱导用户使用）</li><li>会话劫持（窃取会话 ID 冒充用户）</li><li>越权访问（细分 2 类）</li></ol><p> 水平越权（访问同权限用户数据，如查他人订单）</p><p> 垂直越权（低权限访问高权限功能，如普通用户进后台）</p><ol><li>权限提升（通过漏洞获取更高权限）</li><li>认证绕过（直接跳过登录验证，如逻辑缺陷）</li><li>多因素认证缺失（仅单因素认证，易被破解）</li><li>密码重置逻辑漏洞（如验证码复用、重置链接永久有效）</li></ol><h1 id="六、跨站请求伪造（CSRF）相关漏洞"><a href="#六、跨站请求伪造（CSRF）相关漏洞" class="headerlink" title="六、跨站请求伪造（CSRF）相关漏洞"></a>六、跨站请求伪造（CSRF）相关漏洞</h1><ol><li>基础 CSRF（诱导用户在已登录状态执行操作）</li><li>GET 型 CSRF（利用 GET 请求的幂等性触发）</li><li>POST 型 CSRF（利用表单自动提交触发）</li></ol><h1 id="七、逻辑漏洞"><a href="#七、逻辑漏洞" class="headerlink" title="七、逻辑漏洞"></a>七、逻辑漏洞</h1><ol><li>支付逻辑漏洞（如价格篡改、重复支付退款）</li><li>订单逻辑漏洞（如越权修改订单状态、重复下单）</li><li>注册逻辑漏洞（如重复注册、批量注册、手机号复用）</li><li>密码找回逻辑漏洞（如跳过验证步骤、验证码泄露）</li><li>验证码逻辑漏洞（如验证码过期时间长、可重复使用）</li><li>业务流程绕过（如跳过关键步骤完成操作）</li></ol><h1 id="八、XML-与数据格式相关漏洞"><a href="#八、XML-与数据格式相关漏洞" class="headerlink" title="八、XML 与数据格式相关漏洞"></a>八、XML 与数据格式相关漏洞</h1><ol><li>XML 外部实体注入（XXE，利用外部实体读取文件 &#x2F; 执行命令）</li><li>XML 注入（修改 XML 结构导致数据篡改或泄露）</li><li>XPath 注入（XPath 查询未过滤，导致数据泄露）</li></ol><h1 id="九、服务器配置漏洞"><a href="#九、服务器配置漏洞" class="headerlink" title="九、服务器配置漏洞"></a>九、服务器配置漏洞</h1><ol><li>目录遍历（通过..&#x2F;等路径访问非预期目录）</li><li>敏感信息泄露（如 PHPINFO、数据库错误详情、日志泄露）</li><li>服务器版本泄露（响应头暴露 Apache&#x2F;Nginx 版本）</li><li>默认页面未删除（如phpMyAdmin、test.php默认路径）</li><li>目录索引开启（未禁用自动目录列表，泄露文件结构）</li><li>不安全 HTTP 方法（开启 PUT&#x2F;DELETE，允许文件操作）</li><li>CORS 配置不当（跨域资源共享规则过松，泄露数据）</li></ol><h1 id="十、密码学与传输漏洞"><a href="#十、密码学与传输漏洞" class="headerlink" title="十、密码学与传输漏洞"></a>十、密码学与传输漏洞</h1><ol><li>弱加密算法（如使用 MD5、SHA1 存储密码）</li><li>密钥泄露（硬编码密钥、日志泄露密钥）</li><li>明文存储密码（数据库直接存储明文密码）</li><li>加密传输缺失（未用 HTTPS，数据明文传输）</li><li>SSL&#x2F;TLS 配置漏洞（支持弱加密套件、协议版本过低）</li></ol><h1 id="十一、API-与新兴技术漏洞"><a href="#十一、API-与新兴技术漏洞" class="headerlink" title="十一、API 与新兴技术漏洞"></a>十一、API 与新兴技术漏洞</h1><ol><li>API 未授权访问（接口缺少认证，直接调用）</li><li>API 参数篡改（修改接口参数越权操作）</li></ol><h1 id="十二、其他类型漏洞"><a href="#十二、其他类型漏洞" class="headerlink" title="十二、其他类型漏洞"></a>十二、其他类型漏洞</h1><ol><li>反序列化漏洞（如 Java&#x2F;PHP 反序列化执行命令）</li><li>服务器端请求伪造（SSRF，诱导服务器请求内网资源）</li><li>点击劫持（通过透明层诱导用户点击非预期按钮）</li><li>模板注入（如 Jinja2&#x2F;Twig 注入，执行代码）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java反序列化漏洞</title>
      <link href="/1c4a5286cf6d/"/>
      <url>/1c4a5286cf6d/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-Java-序列化与反序列化"><a href="#什么是-Java-序列化与反序列化" class="headerlink" title="什么是 Java 序列化与反序列化"></a>什么是 Java 序列化与反序列化</h2><p>Java 序列化是将内存中的对象转换为字节流的过程，目的是实现对象在不同存储介质（如内存、文件、数据库）或网络间的高效传递 —— 例如网络通信时，发送方需通过序列化将对象转为字节流才能传输；而反序列化则是其逆操作，接收方通过该过程将字节流还原为可直接使用的原始对象。</p><p>从技术实现来看，序列化依赖 <code>ObjectOutputStream</code> 类的 <code>writeObject()</code> 方法，反序列化则通过 <code>ObjectInputStream</code> 类的 <code>readObject()</code> 方法完成。值得注意的是，被操作的类必须实现 <code>Serializable</code> 或 <code>Externalizable</code> 接口：</p><ul><li><code>Serializable</code> 是一个标记接口，不含任何方法，仅作为 “允许序列化” 的权限标识；</li><li><code>Externalizable</code> 作为 <code>Serializable</code> 的子类，要求必须重写 <code>writeExternal()</code>（序列化时执行）和 <code>readExternal()</code>（反序列化时执行）方法，可自定义序列化逻辑。</li></ul><p>这一机制的应用场景十分广泛，包括 RPC 框架中的跨服务对象传输、对象通过文件或数据库进行持久化存储、分布式系统中不同节点间的对象共享等。</p><h2 id="Java-序列化数据结构特点"><a href="#Java-序列化数据结构特点" class="headerlink" title="Java 序列化数据结构特点"></a>Java 序列化数据结构特点</h2><p>Java 序列化数据以二进制形式传输，分析或调试时通常以十六进制格式显示。其前四个字节固定，用于标识序列化数据的开始和版本：AC ED 是魔数，标识为 Java 序列化数据；00 05 是版本号，对应 Java 1.5 及以上版本的序列化协议。</p><h2 id="Java-序列化与反序列化代码示例"><a href="#Java-序列化与反序列化代码示例" class="headerlink" title="Java 序列化与反序列化代码示例"></a>Java 序列化与反序列化代码示例</h2><h3 id="基础类定义"><a href="#基础类定义" class="headerlink" title="基础类定义"></a>基础类定义</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lang.serializable.pojo;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">People</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="comment">// 序列化版本号，确保反序列化时类结构兼容</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">60L</span>;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">People</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;People&#123;&quot;</span> + <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="序列化操作"><a href="#序列化操作" class="headerlink" title="序列化操作"></a>序列化操作</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">People</span> <span class="variable">jack</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">People</span>(<span class="string">&quot;Jack&quot;</span>);</span><br><span class="line">    <span class="comment">// 创建输出流，将对象序列化到文件</span></span><br><span class="line">    <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;./obj.txt&quot;</span>));</span><br><span class="line">    oos.writeObject(jack); <span class="comment">// 序列化对象</span></span><br><span class="line">    oos.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 结果：对象被转化为二进制数据，写入obj.txt文件</span></span><br></pre></td></tr></table></figure><h3 id="反序列化操作"><a href="#反序列化操作" class="headerlink" title="反序列化操作"></a>反序列化操作</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test02</span><span class="params">()</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">    <span class="comment">// 创建输入流，从文件读取字节流并反序列化</span></span><br><span class="line">    <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;./obj.txt&quot;</span>));</span><br><span class="line">    <span class="type">People</span> <span class="variable">people</span> <span class="operator">=</span> (People) ois.readObject(); <span class="comment">// 反序列化对象</span></span><br><span class="line">    System.out.println(people); <span class="comment">// 输出：People&#123;name=&#x27;Jack&#x27;&#125;</span></span><br><span class="line">    ois.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Java-反序列化-漏洞原理及触发条件"><a href="#Java-反序列化-漏洞原理及触发条件" class="headerlink" title="[Java 反序列化]漏洞原理及触发条件"></a>[Java 反序列化]漏洞原理及触发条件</h2><h3 id="漏洞本质"><a href="#漏洞本质" class="headerlink" title="漏洞本质"></a>漏洞本质</h3><p>当反序列化过程处理攻击者构造的恶意字节流时，可能触发危险操作，如命令执行、代码注入等。</p><h3 id="触发关键点"><a href="#触发关键点" class="headerlink" title="触发关键点"></a>触发关键点</h3><ul><li>危险方法重写：类重写 readObject () 或 readExternal () 时，若包含未校验的危险操作（如 Runtime.getRuntime ().exec ()），可能被利用。</li><li>输入校验缺失：开发者未对反序列化的字节流来源和内容进行严格校验，导致恶意对象被解析。</li></ul><h3 id="重写序列化方法的类"><a href="#重写序列化方法的类" class="headerlink" title="重写序列化方法的类"></a>重写序列化方法的类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lang.serializable.pojo;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">People</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">60L</span>;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line">    <span class="comment">// 构造方法、getter/setter略</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;People&#123;&quot;</span> + <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&quot;&#x27;, pwd=&#x27;&quot;</span> + pwd + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">writeObject</span><span class="params">(ObjectOutputStream out)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        ObjectOutputStream.<span class="type">PutField</span> <span class="variable">putField</span> <span class="operator">=</span> out.putFields();</span><br><span class="line">        putField.put(<span class="string">&quot;name&quot;</span>, name); <span class="comment">// 仅序列化name字段</span></span><br><span class="line">        out.writeFields();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(ObjectInputStream in)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        ObjectInputStream.<span class="type">GetField</span> <span class="variable">getField</span> <span class="operator">=</span> in.readFields();</span><br><span class="line">        name = (String) getField.get(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;rose&quot;</span>);</span><br><span class="line">        <span class="comment">// 危险示例：若此处添加命令执行</span></span><br><span class="line">        <span class="comment">// Runtime.getRuntime().exec(&quot;mkdir lang&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
